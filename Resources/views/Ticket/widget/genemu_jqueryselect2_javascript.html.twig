{% block genemu_jqueryselect2_javascript %}
    <script type="text/javascript">
        require(['underscore', 'jquery', 'oroform/js/select2-config', 'oroform/js/select2_relevancy_order_handler'
                    {%- if configs.extra_modules is defined and not configs.extra_modules is empty %}
                    {%- for path in configs.extra_modules -%}
                    , '{{ path }}'
                    {%- endfor -%}
                    {% endif -%}
                    , 'jquery.select2'],
                function(_, $, Select2Config, orderHandler
                        {%- if configs.extra_modules is defined and not configs.extra_modules is empty %}
                        {%- for name in configs.extra_modules|keys -%}
                        , {{ name }}
                        {%- endfor -%}
                        {% endif -%}
                        ){
                    var $field = $('#{{ id }}');

                    {% block genemu_jqueryselect2_javascript_prototype %}
                    {% set routeParameters = configs.route_parameters is defined ? configs.route_parameters : [] %}
                    {% set url = configs.route_name is defined and configs.route_name ? path(configs.route_name, routeParameters) : '' %}
                    {% if configs.placeholder is defined %}
                    {% set configs = configs|merge({'placeholder': configs.placeholder|trans }) %}
                    {% endif %}
                    {% if configs.result_template_twig is defined and configs.result_template_twig %}
                    {% set configs = configs|merge({'result_template': include(configs.result_template_twig) }) %}
                    {% endif %}
                    {% if configs.selection_template_twig is defined and configs.selection_template_twig %}
                    {% set configs = configs|merge({'selection_template': include(configs.selection_template_twig) }) %}
                    {% endif %}

                    var select2Config = {{ configs|json_encode|raw }};
                    {% if configs.extra_config is defined and configs.extra_config %}
                    {{ block('oro_combobox_dataconfig_' ~ configs.extra_config) }}
                    {% endif %}

                    orderHandler.handle(select2Config);

                    {% if excluded is not defined %}
                    {% set excluded = [] %}
                    {% endif %}
                    if ($field.length) {
                        var configurator = new Select2Config(
                                select2Config,
                                {{ url|json_encode|raw }},
                                {{ configs.per_page|default(10) }},
                                {{ excluded|json_encode|raw }}
                        );
                        select2Config = configurator.getConfig();
                    }

                    select2Config.createSearchChoice = function(term, data) {
                        if (
                                $(data).filter(function() {
                                    return this.name.toLowerCase().localeCompare(term.toLowerCase()) === 0;
                                }).length === 0
                        ) {
                            return {
                                id: term,
                                name: term
                            };
                        }
                    };

                    select2Config.maximumInputLength = 255;
                    select2Config.placeholder = 'Choose a watcher';

                    $field.select2(select2Config);
                    $field.trigger('select2-init');
                    {% endblock %}
                });
    </script>
{% endblock %}